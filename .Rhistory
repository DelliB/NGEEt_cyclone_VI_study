axis.title = element_text(size = 13, color = "black"),
panel.grid.minor = element_blank()) +
#labs(caption = "Solid lines are pantropical mean and shaded areas represent 95% CI") +
guides(color = guide_legend(ncol=4, byrow=FALSE))
# EVI plot
EVIreco <- ggplot(reco_CI, aes(x = month, y = EVI_change_250m, group =
case_study, color = region)) +
geom_line(data = reco_CI[!is.na(reco_CI$EVI_change_250m),], linetype = "dashed") +
geom_ribbon(aes(x = month, ymin = EVI_lower, ymax = EVI_upper),
fill = "purple1", alpha = 0.02, color = NA) +
geom_line(aes(x = month, y = EVI_m, color = "Pantropical Δ EVI"), lwd=1) +
geom_ribbon(data = LFreco, aes(x = month, ymin = CI_lower_bound, ymax =
CI_upper_bound),
fill = "gray", alpha = 0.25, color = NA) +
geom_line(data = LFreco, aes(x = month, y = Pantropical_Litterfall_Mean,
color = "Pantropical litterfall"), lwd=1) +
labs(x = time, y = EVIreco, color = "Region") +
scale_y_continuous(breaks=c(-1, 0, 1)) +
geom_hline(yintercept=c(0), color = "gray") +
scale_color_manual(values = c("red2", "yellow3", "springgreen4", "black",
"purple4", "orchid")) +
theme_bw() +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
legend.title = element_text(size = 13, color = "black"),
legend.text = element_text(size = 13, color = "black"),
plot.title = element_blank(),
axis.text = element_text(size = 13, color = "black"),
axis.title = element_text(size = 13, color = "black"),
plot.caption = element_text(size = 10, color = "black"),
panel.grid.minor = element_blank()) +
labs(caption = "Solid lines are pantropical mean and shaded areas
represent 95% CI")
# Join figures together and save
reco_EVI_LAI <- ggarrange(LAIreco, EVIreco, nrow = 2, labels = c("A", "B"))
print(reco_EVI_LAI)
# LAI plot
LAIreco <- ggplot(reco_CI, aes(x = month, y = LAI_change_500m, group = case_study, color = region)) +
geom_line(data = reco_CI[!is.na(reco_CI$LAI_change_500m),], linetype = "dashed") +
geom_ribbon(aes(x = month, ymin = LAI_lower, ymax = LAI_upper),
fill = "light blue", alpha = 0.05, color = NA) +
geom_line(aes(x = month, y = LAI_m, color = "Pantropical Δ LAI"), lwd=1) +
geom_ribbon(data = LFreco, aes(x = month, ymin = CI_lower_bound,
ymax = CI_upper_bound),
fill = "gray", alpha = 0.25, color = NA) +
geom_line(data = LFreco, aes(x = month, y = Pantropical_Litterfall_Mean,
color = "Pantropical litterfall"), lwd=1) +
labs(x = "", y = LAIreco, color = "Region") +
ylim(-1.5, 1.5) +
geom_hline(yintercept=c(0), color = "gray") +
#scale_color_manual(values = c("red2", "yellow3", "springgreen4", "black",
#                             "deepskyblue3", "orchid")) +
theme_bw() +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
legend.position = "top",
legend.title = element_text(size = 13, color = "black"),
legend.text = element_text(size = 13, color = "black"),
plot.title = element_blank(),
axis.text = element_text(size = 13, color = "black"),
axis.title = element_text(size = 13, color = "black"),
panel.grid.minor = element_blank()) +
scale_colour_manual("Region",
breaks = c("Australia", "Caribbean", "Mexico",
"Pantropical litterfall", "Pantropical Δ LAI",
"Pantropical Δ EVI", "Taiwan"),
values = c("Australia"="red2", "Caribbean"="yellow3",
"Mexico"="springgreen4", "Pantropical litterfall"=
"black", "Pantropical Δ LAI"="deepskyblue3",
"Pantropical Δ EVI"= "purple4", "Taiwan"="orchid")) +
#labs(caption = "Solid lines are pantropical mean and shaded areas represent 95% CI") +
guides(color = guide_legend(ncol=4, byrow=FALSE))
# EVI plot
EVIreco <- ggplot(reco_CI, aes(x = month, y = EVI_change_250m, group =
case_study, color = region)) +
geom_line(data = reco_CI[!is.na(reco_CI$EVI_change_250m),], linetype = "dashed") +
geom_ribbon(aes(x = month, ymin = EVI_lower, ymax = EVI_upper),
fill = "purple1", alpha = 0.02, color = NA) +
geom_line(aes(x = month, y = EVI_m, color = "Pantropical Δ EVI"), lwd=1) +
geom_ribbon(data = LFreco, aes(x = month, ymin = CI_lower_bound, ymax =
CI_upper_bound),
fill = "gray", alpha = 0.25, color = NA) +
geom_line(data = LFreco, aes(x = month, y = Pantropical_Litterfall_Mean,
color = "Pantropical litterfall"), lwd=1) +
labs(x = time, y = EVIreco, color = "Region") +
scale_y_continuous(breaks=c(-1, 0, 1)) +
geom_hline(yintercept=c(0), color = "gray") +
scale_color_manual(values = c("red2", "yellow3", "springgreen4", "black",
"purple4", "orchid")) +
theme_bw() +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
legend.title = element_text(size = 13, color = "black"),
legend.text = element_text(size = 13, color = "black"),
plot.title = element_blank(),
axis.text = element_text(size = 13, color = "black"),
axis.title = element_text(size = 13, color = "black"),
plot.caption = element_text(size = 10, color = "black"),
panel.grid.minor = element_blank()) +
labs(caption = "Solid lines are pantropical mean and shaded areas
represent 95% CI")
# Join figures together and save
reco_EVI_LAI <- ggarrange(LAIreco, EVIreco, nrow = 2, labels = c("A", "B"))
#print(reco_EVI_LAI)
ggsave("NGEE_paper_Fig_4.png", width = 8, height = 7, path = data_directory)
### Organizing Environment
## Load packages and data
# load packages
library(tidyverse)
library(ggpubr)
library(multcompView)
library(ggcorrplot)
library(factoextra)
library(ggbiplot)
# Dellena file path
#data_directory <- '~/Documents/Kueppers lab'
data_directory <- 'private/data'
# load data
recovery <- read.csv(file.path(data_directory, "MODIS_recovery.csv"),
stringsAsFactors= FALSE, na.strings = '-9999')
LFreco <- read.csv(file.path(data_directory, "MODIS_recovery_bb.csv"),
stringsAsFactors= FALSE)
VIs_sites <- read.csv(file.path(data_directory, "case_study_data.csv"),
stringsAsFactors= FALSE, na.strings = '-9999') %>%
drop_na(change_annual_LAI_500m)
## Axis labels
# Change in LAI and EVI
EVI = expression(Delta*"EVI annual (250m)")
LAI = expression(Delta*"LAI annual (500m)")
# Litter fall
dTL1 = expression(Delta*"TL annual")
dLL1 = expression(Delta*"LL annual")
# Recovery
LAIreco = expression(Delta*"LAI 500m [LAI/LAI]")
EVIreco = expression(Delta*"EVI 250m [EVI/EVI]")
time = "Time since disturbance (months)"
# Soil phosphorus
sP = expression(paste(log[10],"(soil P (mg/kg))"))
## Calculating change in litter fall
# annual total litter fall
VIs_sites$change_annual_total_litterfall = log(
VIs_sites$Response_Post_Mean_Tot_Litterfall/
VIs_sites$Pre_Mean_Tot_Litterfall_g.m2.day)
## Figure 4: Recovery of LAI and EVI
# Calculation of stats
LF_CI <- LFreco %>%
filter(LAI_change_500m != -9999) %>%
filter(EVI_change_250m != -9999) %>%
reframe(EVI_lower = quantile(EVI_change_250m, 0.05, na.rm = F),
EVI_upper = quantile(EVI_change_250m, 0.95, na.rm = F),
LAI_lower = quantile(LAI_change_500m, 0.05, na.rm = F),
LAI_upper = quantile(LAI_change_500m, 0.95, na.rm = F),
LAI_m = mean(LAI_change_500m),
EVI_m = mean(EVI_change_250m),
.by = month)
# Inclusion of stats with litterfall data
reco_CI <- merge(LF_CI, recovery, by = "month")
# LAI plot
LAIreco <- ggplot(reco_CI, aes(x = month, y = LAI_change_500m, group = case_study, color = region)) +
geom_line(data = reco_CI[!is.na(reco_CI$LAI_change_500m),], linetype = "dashed") +
geom_ribbon(aes(x = month, ymin = LAI_lower, ymax = LAI_upper),
fill = "light blue", alpha = 0.05, color = NA) +
geom_line(aes(x = month, y = LAI_m, color = "Pantropical Δ LAI"), lwd=1) +
geom_ribbon(data = LFreco, aes(x = month, ymin = CI_lower_bound,
ymax = CI_upper_bound),
fill = "gray", alpha = 0.25, color = NA) +
geom_line(data = LFreco, aes(x = month, y = Pantropical_Litterfall_Mean,
color = "Pantropical litterfall"), lwd=1) +
labs(x = "", y = LAIreco, color = "Region") +
ylim(-1.5, 1.5) +
geom_hline(yintercept=c(0), color = "gray") +
#scale_color_manual(values = c("red2", "yellow3", "springgreen4", "black",
#                             "deepskyblue3", "orchid")) +
scale_colour_manual("Region",
breaks = c("Australia", "Caribbean", "Mexico",
"Pantropical litterfall", "Pantropical Δ LAI",
"Pantropical Δ EVI", "Taiwan"),
values = c("Australia"="red2", "Caribbean"="yellow3",
"Mexico"="springgreen4", "Pantropical litterfall"=
"black", "Pantropical Δ LAI"="deepskyblue3",
"Pantropical Δ EVI"= "purple4", "Taiwan"="orchid")) +
theme_bw() +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
legend.position = "top",
legend.title = element_text(size = 13, color = "black"),
legend.text = element_text(size = 13, color = "black"),
plot.title = element_blank(),
axis.text = element_text(size = 13, color = "black"),
axis.title = element_text(size = 13, color = "black"),
panel.grid.minor = element_blank()) +
#labs(caption = "Solid lines are pantropical mean and shaded areas represent 95% CI") +
guides(color = guide_legend(ncol=4, byrow=FALSE))
# EVI plot
EVIreco <- ggplot(reco_CI, aes(x = month, y = EVI_change_250m, group =
case_study, color = region)) +
geom_line(data = reco_CI[!is.na(reco_CI$EVI_change_250m),], linetype = "dashed") +
geom_ribbon(aes(x = month, ymin = EVI_lower, ymax = EVI_upper),
fill = "purple1", alpha = 0.02, color = NA) +
geom_line(aes(x = month, y = EVI_m, color = "Pantropical Δ EVI"), lwd=1) +
geom_ribbon(data = LFreco, aes(x = month, ymin = CI_lower_bound, ymax =
CI_upper_bound),
fill = "gray", alpha = 0.25, color = NA) +
geom_line(data = LFreco, aes(x = month, y = Pantropical_Litterfall_Mean,
color = "Pantropical litterfall"), lwd=1) +
labs(x = time, y = EVIreco, color = "Region") +
scale_y_continuous(breaks=c(-1, 0, 1)) +
geom_hline(yintercept=c(0), color = "gray") +
scale_color_manual(values = c("red2", "yellow3", "springgreen4", "black",
"purple4", "orchid")) +
theme_bw() +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
legend.title = element_text(size = 13, color = "black"),
legend.text = element_text(size = 13, color = "black"),
plot.title = element_blank(),
axis.text = element_text(size = 13, color = "black"),
axis.title = element_text(size = 13, color = "black"),
plot.caption = element_text(size = 10, color = "black"),
panel.grid.minor = element_blank()) +
labs(caption = "Solid lines are pantropical mean and shaded areas
represent 95% CI")
# Join figures together and save
reco_EVI_LAI <- ggarrange(LAIreco, EVIreco, nrow = 2, labels = c("A", "B"))
print(reco_EVI_LAI)
### Organizing Environment
## Load packages and data
# load packages
library(tidyverse)
library(ggpubr)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(webshot)
library(lme4)
# Dellena file path
#data_directory <- '~/Documents/Kueppers lab'
data_directory <- 'private/data'
# load data
VIs_sites <- read.csv(file.path(data_directory, "case_study_data.csv"),
stringsAsFactors= FALSE, na.strings = '-9999') %>%
drop_na(change_annual_LAI_500m)
?merge
View(recovery)
View(LFreco)
# load data
recovery <- read.csv(file.path(data_directory, "MODIS_recovery.csv"),
stringsAsFactors= FALSE, na.strings = '-9999')
LFreco <- read.csv(file.path(data_directory, "MODIS_recovery_bb.csv"),
stringsAsFactors= FALSE, na.strings = '-9999')
VIs_sites <- read.csv(file.path(data_directory, "case_study_data.csv"),
stringsAsFactors= FALSE, na.strings = '-9999') %>%
drop_na(change_annual_LAI_500m)
## Axis labels
# Change in LAI and EVI
EVI = expression(Delta*"EVI annual (250m)")
LAI = expression(Delta*"LAI annual (500m)")
# Litter fall
dTL1 = expression(Delta*"TL annual")
dLL1 = expression(Delta*"LL annual")
# Recovery
LAIreco = expression(Delta*"LAI 500m [LAI/LAI]")
EVIreco = expression(Delta*"EVI 250m [EVI/EVI]")
time = "Time since disturbance (months)"
# Soil phosphorus
sP = expression(paste(log[10],"(soil P (mg/kg))"))
## Calculating change in litter fall
# annual total litter fall
VIs_sites$change_annual_total_litterfall = log(
VIs_sites$Response_Post_Mean_Tot_Litterfall/
VIs_sites$Pre_Mean_Tot_Litterfall_g.m2.day)
## Figure 4: Recovery of LAI and EVI
# Calculation of stats
LF_CI <- LFreco %>%
#filter(LAI_change_500m != -9999) %>%
#filter(EVI_change_250m != -9999) %>%
reframe(EVI_lower = quantile(EVI_change_250m, 0.05, na.rm = F),
EVI_upper = quantile(EVI_change_250m, 0.95, na.rm = F),
LAI_lower = quantile(LAI_change_500m, 0.05, na.rm = F),
LAI_upper = quantile(LAI_change_500m, 0.95, na.rm = F),
LAI_m = mean(LAI_change_500m),
EVI_m = mean(EVI_change_250m),
.by = month)
## Figure 4: Recovery of LAI and EVI
# Calculation of stats
LF_CI <- LFreco %>%
#filter(LAI_change_500m != -9999) %>%
#filter(EVI_change_250m != -9999) %>%
reframe(EVI_lower = quantile(EVI_change_250m, 0.05, na.rm = T),
EVI_upper = quantile(EVI_change_250m, 0.95, na.rm = T),
LAI_lower = quantile(LAI_change_500m, 0.05, na.rm = T),
LAI_upper = quantile(LAI_change_500m, 0.95, na.rm = T),
LAI_m = mean(LAI_change_500m),
EVI_m = mean(EVI_change_250m),
.by = month)
# Inclusion of stats with litterfall data
reco_CI <- merge(LF_CI, recovery, by = "month")
# LAI plot
LAIreco <- ggplot(reco_CI, aes(x = month, y = LAI_change_500m, group = case_study, color = region)) +
geom_line(data = reco_CI[!is.na(reco_CI$LAI_change_500m),], linetype = "dashed") +
geom_ribbon(aes(x = month, ymin = LAI_lower, ymax = LAI_upper),
fill = "light blue", alpha = 0.05, color = NA) +
geom_line(aes(x = month, y = LAI_m, color = "Pantropical Δ LAI"), lwd=1) +
geom_ribbon(data = LFreco, aes(x = month, ymin = CI_lower_bound,
ymax = CI_upper_bound),
fill = "gray", alpha = 0.25, color = NA) +
geom_line(data = LFreco, aes(x = month, y = Pantropical_Litterfall_Mean,
color = "Pantropical litterfall"), lwd=1) +
labs(x = "", y = LAIreco, color = "Region") +
ylim(-1.5, 1.5) +
geom_hline(yintercept=c(0), color = "gray") +
#scale_color_manual(values = c("red2", "yellow3", "springgreen4", "black",
#                             "deepskyblue3", "orchid")) +
scale_colour_manual("Region",
breaks = c("Australia", "Caribbean", "Mexico",
"Pantropical litterfall", "Pantropical Δ LAI",
"Pantropical Δ EVI", "Taiwan"),
values = c("Australia"="red2", "Caribbean"="yellow3",
"Mexico"="springgreen4", "Pantropical litterfall"=
"black", "Pantropical Δ LAI"="deepskyblue3",
"Pantropical Δ EVI"= "purple4", "Taiwan"="orchid")) +
theme_bw() +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
legend.position = "top",
legend.title = element_text(size = 13, color = "black"),
legend.text = element_text(size = 13, color = "black"),
plot.title = element_blank(),
axis.text = element_text(size = 13, color = "black"),
axis.title = element_text(size = 13, color = "black"),
panel.grid.minor = element_blank()) +
#labs(caption = "Solid lines are pantropical mean and shaded areas represent 95% CI") +
guides(color = guide_legend(ncol=4, byrow=FALSE))
# EVI plot
EVIreco <- ggplot(reco_CI, aes(x = month, y = EVI_change_250m, group =
case_study, color = region)) +
geom_line(data = reco_CI[!is.na(reco_CI$EVI_change_250m),], linetype = "dashed") +
geom_ribbon(aes(x = month, ymin = EVI_lower, ymax = EVI_upper),
fill = "purple1", alpha = 0.02, color = NA) +
geom_line(aes(x = month, y = EVI_m, color = "Pantropical Δ EVI"), lwd=1) +
geom_ribbon(data = LFreco, aes(x = month, ymin = CI_lower_bound, ymax =
CI_upper_bound),
fill = "gray", alpha = 0.25, color = NA) +
geom_line(data = LFreco, aes(x = month, y = Pantropical_Litterfall_Mean,
color = "Pantropical litterfall"), lwd=1) +
labs(x = time, y = EVIreco, color = "Region") +
scale_y_continuous(breaks=c(-1, 0, 1)) +
geom_hline(yintercept=c(0), color = "gray") +
scale_color_manual(values = c("red2", "yellow3", "springgreen4", "black",
"purple4", "orchid")) +
theme_bw() +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
legend.title = element_text(size = 13, color = "black"),
legend.text = element_text(size = 13, color = "black"),
plot.title = element_blank(),
axis.text = element_text(size = 13, color = "black"),
axis.title = element_text(size = 13, color = "black"),
plot.caption = element_text(size = 10, color = "black"),
panel.grid.minor = element_blank()) +
labs(caption = "Solid lines are pantropical mean and shaded areas
represent 95% CI")
# Join figures together and save
reco_EVI_LAI <- ggarrange(LAIreco, EVIreco, nrow = 2, labels = c("A", "B"))
print(reco_EVI_LAI)
## Variation in recovery times
# Calculating recovery stats
reco_stats <- LFreco %>%
reframe(EVI_lower = quantile(EVI_change_250m, 0.05, na.rm = T),
EVI_upper = quantile(EVI_change_250m, 0.95, na.rm = T),
LAI_lower = quantile(LAI_change_500m, 0.05, na.rm = T),
LAI_upper = quantile(LAI_change_500m, 0.95, na.rm = T),
LAI_m = mean(LAI_change_500m),
EVI_m = mean(EVI_change_250m),
.by = time)
## Variation in recovery times
# Calculating recovery stats
reco_stats <- LFreco %>%
reframe(EVI_lower = quantile(EVI_change_250m, 0.05, na.rm = T),
EVI_upper = quantile(EVI_change_250m, 0.95, na.rm = T),
LAI_lower = quantile(LAI_change_500m, 0.05, na.rm = T),
LAI_upper = quantile(LAI_change_500m, 0.95, na.rm = T),
LAI_m = mean(LAI_change_500m),
EVI_m = mean(EVI_change_250m),
.by = month)
View(reco_stats)
## Variation in recovery times
# Calculating recovery stats
reco_stats <- LFreco %>%
reframe(EVI_lower = quantile(EVI_change_250m, 0.05, na.rm = T),
EVI_upper = quantile(EVI_change_250m, 0.95, na.rm = T),
LAI_lower = quantile(LAI_change_500m, 0.05, na.rm = T),
LAI_upper = quantile(LAI_change_500m, 0.95, na.rm = T),
LAI_m = mean(LAI_change_500m),
EVI_m = mean(EVI_change_250m),
.by = case_study)
## Variation in recovery times
# Calculating recovery stats
reco_stats <- LFreco %>%
reframe(EVI_lower = quantile(EVI_change_250m, 0.05, na.rm = T),
EVI_upper = quantile(EVI_change_250m, 0.95, na.rm = T),
LAI_lower = quantile(LAI_change_500m, 0.05, na.rm = T),
LAI_upper = quantile(LAI_change_500m, 0.95, na.rm = T),
LAI_m = mean(LAI_change_500m),
EVI_m = mean(EVI_change_250m))
## Variation in recovery times
# Calculating recovery stats
reco_stats <- LFreco %>%
reframe(EVI_lower = quantile(EVI_change_250m, 0.05, na.rm = T),
EVI_upper = quantile(EVI_change_250m, 0.95, na.rm = T),
LAI_lower = quantile(LAI_change_500m, 0.05, na.rm = T),
LAI_upper = quantile(LAI_change_500m, 0.95, na.rm = T),
LAI_m = mean(LAI_change_500m, na.rm = T),
EVI_m = mean(EVI_change_250m, na.rm = T))
## Variation in recovery times
# Calculating recovery stats for EVI
EVI_stats <- LFreco %>%
filter(EVI_change_250m > 0) %>%
reframe(EVI_lower = quantile(EVI_change_250m, 0.05, na.rm = T),
EVI_upper = quantile(EVI_change_250m, 0.95, na.rm = T),
EVI_m = mean(EVI_change_250m, na.rm = T))
View(EVI_stats)
## Variation in recovery times
# Calculating recovery stats for EVI
EVI_stats <- LFreco %>%
filter(EVI_change_250m > 0) %>%
reframe(EVI_month_lower = quantile(month, 0.05, na.rm = T),
EVI_month_upper = quantile(month, 0.95, na.rm = T),
EVI_month_m = mean(month, na.rm = T))
View(EVI_stats)
LAI_time_stats <- LFreco %>%
filter(LAI_change_500m > 0) %>%
reframe(LAI_month_lower = quantile(month, 0.05, na.rm = T),
LAI_month_upper = quantile(month, 0.95, na.rm = T),
LAI_month_m = mean(month, na.rm = T))
View(LAI_time_stats)
## Variation in recovery times
# Calculating recovery stats for EVI
EVI_time_stats <- LFreco %>%
filter(EVI_change_250m > 0) %>%
reframe(EVI_month_lower = quantile(month, 0.05, na.rm = T),
EVI_month_upper = quantile(month, 0.95, na.rm = T),
EVI_month_m = mean(month, na.rm = T))
View(EVI_time_stats)
EVI_time_stats <- LFreco %>%
filter(EVI_change_250m > 0)
## Variation in recovery times
# Calculating recovery stats for EVI
EVI_time_stats <- LFreco %>%
select(EVI_change_250m, month, case_study) %>%
filter(EVI_change_250m > 0) %>%
reframe(first_at_baseline = min(month), .by = case_study)
EVI_time_stats <- LFreco %>%
select(EVI_change_250m, month, case_study) %>%
filter(EVI_change_250m > 0)
## Variation in recovery times
# Calculating recovery stats for EVI
EVI_time_stats <- LFreco %>%
select(EVI_change_250m, month, case_study) %>%
filter(EVI_change_250m > 0) %>%
reframe(time_at_baseline = min(month), .by = case_study)
## Variation in recovery times
# Calculating recovery stats for EVI
EVI_time_stats <- LFreco %>%
select(EVI_change_250m, month, case_study) %>%
filter(EVI_change_250m > 0) %>%
reframe(time_at_baseline = min(month), .by = case_study) %>%
reframe(EVI_month_lower = quantile(time_at_baseline, 0.05, na.rm = T),
EVI_month_upper = quantile(time_at_baseline, 0.95, na.rm = T),
EVI_month_m = mean(time_at_baseline, na.rm = T))
LAI_time_stats <- LFreco %>%
select(LAI_change_500m, month, case_study) %>%
filter(LAI_change_500m > 0) %>%
reframe(time_at_baseline = min(month), .by = case_study) %>%
reframe(LAI_month_lower = quantile(time_at_baseline, 0.05, na.rm = T),
LAI_month_upper = quantile(time_at_baseline, 0.95, na.rm = T),
LAI_month_m = mean(time_at_baseline, na.rm = T))
LAI_time_stats <- LFreco %>%
select(LAI_change_500m, month, case_study) %>%
filter(LAI_change_500m > 0) %>%
reframe(time_at_baseline = min(month), .by = case_study)
EVI_time_stats <- LFreco %>%
select(EVI_change_250m, month, case_study) %>%
filter(EVI_change_250m > 0) %>%
reframe(time_at_baseline = min(month), .by = case_study)
EVI_time_stats <- LFreco %>%
select(EVI_change_250m, month, case_study) %>%
filter(EVI_change_250m > 0)
## Variation in recovery times
# Calculating recovery stats for EVI
EVI_time_stats <- LFreco %>%
select(EVI_change_250m, month, case_study) %>%
filter(EVI_change_250m > 0) %>%
reframe(time_at_baseline = min(month), .by = case_study) %>%
reframe(EVI_month_lower = quantile(time_at_baseline, 0.05, na.rm = T),
EVI_month_upper = quantile(time_at_baseline, 0.95, na.rm = T),
EVI_month_m = mean(time_at_baseline, na.rm = T))
LAI_time_stats <- LFreco %>%
select(LAI_change_500m, month, case_study) %>%
filter(LAI_change_500m > 0) %>%
reframe(time_at_baseline = min(month), .by = case_study) %>%
reframe(LAI_month_lower = quantile(time_at_baseline, 0.05, na.rm = T),
LAI_month_upper = quantile(time_at_baseline, 0.95, na.rm = T),
LAI_month_m = mean(time_at_baseline, na.rm = T))
LF_time_stats <- LFreco %>%
select(Pantropical_Litterfall_Mean, month, case_study) %>%
filter(Pantropical_Litterfall_Mean > 0)
View(LF_time_stats)
